Java实现数据结构之队列
队列的抽象数据类型：队列作为一种特殊的线性表，其插入和删除的操作分别在表的两端进行。
队列的特点：先进先出（First In First Out）。先进先出的策略准则，使得元素的处理顺序就是它们被添加到队列中的顺序。
队列能够在保存元素的同时保存它们的相对顺序：使它们入队顺序和出队顺序相同。
入队：向队列中插入元素，入队操作一般是在队尾进行。
出队：删除队列中的元素，出队操作一般是在对首进行。
关于队列的操作，主要有：入队、出队、判断空队列、清空队列等。

1、使用数组实现顺序队列
    关于顺序队列，底层使用数组作为容器来实现。
    a、采用简单数组实现顺序队列：由队列的定义可知，只能在队列的一端进行入队操作，而在另一端进行出队操作。
       当执行多次入队和出队操作后，就可以很容易地发现使用简单数组实现队列的空间浪费问题。
       或者，在入队时，直接在数组的末尾进行插入操作，其时间复杂度为O(1),出队时，直接在数组的头部执行删除操作，其时间复杂度为O(n)，主要用来移动元素。因此，造成不必要的时间浪费。
       综上分析，我们在简单数组中添加一个头指针指向下标front和尾指针指向下标rear，出入和入队操作时，只需要改变front、rear的下标值便可以，无序移动元素，由此，出队的时间复杂度也就变为O(1)。
    b、采用简单循环数组实现顺序循环队列：将顺序队列设计为在逻辑结构上首尾相接的循环结构。
       在给简单数组添加一个头指针front和尾指针rear，其中 front = (front+1)%size 和 rear = (rear + 1)%size 的下标取值范围是[0,size-1]
       初始时，front = rear ：表示队列为空；
       当进行入队操作时，front = front + 1,也就是front向前移动一位
       当进行出队操作是，rear = rear - 1，也就是rear向后移动一位
       当队列为满时，front=(rear+1)%size，此时队列中仍然有一个空的位置，主要是用来避免与队列为空的条件相同
    c、采用动态循环数组实现顺序循环队列：

    d、采用链表实现队列：

